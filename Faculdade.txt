#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>

#define MAX_PACIENTES 100 // número máximo de pacientes que podem ser registrados
#define MAX_SALAS 10 // número de salas de atendimento disponíveis

// Estrutura que representa um paciente
struct Paciente {
    char nome[50];
    char telefone[20];
    char cpf[20];
    time_t horario_chegada;
};

// Variáveis globais
struct Paciente pacientes[MAX_PACIENTES]; // vetor de pacientes
int num_pacientes = 0; // número atual de pacientes registrados
int salas_disponiveis[MAX_SALAS]; // vetor que guarda as salas disponíveis
int num_salas_disponiveis = MAX_SALAS; // número atual de salas disponíveis

// Funções
void tela_apresentacao();
void tela_marcar_consulta();
void tela_chamar_paciente();
void tela_finalizar_sistema();

int main() {
    int opcao;

    // Inicializa as salas disponíveis
    for (int i = 0; i < MAX_SALAS; i++) {
        salas_disponiveis[i] = i + 1;
    }

    do {
        tela_apresentacao();
        scanf("%d", &opcao);

        switch(opcao) {
            case 1:
                tela_marcar_consulta();
                break;
            case 2:
                tela_chamar_paciente();
                break;
            case 3:
                tela_finalizar_sistema();
                break;
            default:
                printf("Opção inválida.\n");
        }

    } while(opcao != 3);

    return 0;
}

// Implementação das funções

// Tela de apresentação
void tela_apresentacao() {
    printf("Bem-vindo ao sistema de atendimento.\n");
    printf("Escolha uma opção:\n");
    printf("1 - Marcar consulta\n");
    printf("2 - Chamar paciente para consulta\n");
    printf("3 - Finalizar sistema\n");
}

// Tela de marcação de consulta
void tela_marcar_consulta() {
    char nome[50], telefone[20], cpf[20];
    time_t horario_chegada;

    printf("Digite o nome do paciente: ");
    scanf("%s", nome);

    printf("Digite o telefone do paciente: ");
    scanf("%s", telefone);

    printf("Digite o CPF do paciente: ");
    scanf("%s", cpf);

    horario_chegada = time(NULL); // obtém o horário atual

    // Cria um novo paciente e adiciona ao vetor de pacientes
    struct Paciente novo_paciente;
    strcpy(novo_paciente.nome, nome);
    strcpy(novo_paciente.telefone, telefone);
    strcpy(novo_paciente.cpf, cpf);
    novo_paciente.horario_chegada = horario_chegada;

    pacientes[num_pacientes] = novo_paciente;
    num_pacientes++;

    printf("Consulta marcada com sucesso.\n");
}

// Tela de chamada de paciente
void tela_chamar_paciente() {
    if (num_pacientes == 0) {
        printf("Não há pacientes registrados.\n");
        return;
    }

    if (num_salas_disponiveis == 0) {
        printf("Não há salas disponíveis no momento.\n");
        return;
    }

    // Ordena os pacientes
if (num_salas_disponiveis == 0) {
    printf("Não há salas disponíveis no momento.\n");
    return;
}

// Ordena os pacientes por ordem de chegada
qsort(pacientes, num_pacientes, sizeof(struct Paciente), compara_pacientes);

// Escolhe uma sala aleatória
srand(time(NULL));
int sala_escolhida = salas_disponiveis[rand() % num_salas_disponiveis];

// Remove a sala escolhida do vetor de salas disponíveis
for (int i = 0; i < num_salas_disponiveis; i++) {
    if (salas_disponiveis[i] == sala_escolhida) {
        for (int j = i; j < num_salas_disponiveis - 1; j++) {
            salas_disponiveis[j] = salas_disponiveis[j + 1];
        }
        num_salas_disponiveis--;
        break;
    }
}

// Chama o próximo paciente
struct Paciente proximo_paciente = pacientes[0];
for (int i = 0; i < num_pacientes - 1; i++) {
    pacientes[i] = pacientes[i + 1];
}
num_pacientes--;

// Mostra os dados do paciente chamado e a sala escolhida
printf("Chamando paciente: %s\n", proximo_paciente.nome);
printf("Telefone: %s\n", proximo_paciente.telefone);
printf("CPF: %s\n", proximo_paciente.cpf);
printf("Horário de chegada: %s\n", ctime(&proximo_paciente.horario_chegada));
printf("Sala escolhida: %d\n", sala_escolhida);

// Tela de finalização do sistema
void tela_finalizar_sistema() {
printf("Sistema finalizado.\n");
}